Область действия локальных и глобальных переменных

Место определения переменных задает их область действия, то есть место, где они будут (или не будут)
"видны" для вашего кода. Рассмотрим примеры переменныхс локальной и глобальной областью действия.
Не забудьте, что переменные, определяемые внутри функции, имеют глобальную область действия, а переменные
в функциях имеют локлаьную область действия.

var avatar = "generic";
var skill = 1.0;
var pointPerLevel = 1000;
var userPoints = 2008;

function getAvatar(points){
	var level = points / pointsPerLevel;
	if (level == 0){
		return "Teddy bear";
	} else if (level == 1){
		return "Cat";
	} else if (level >= 2){
		return "Gorilla";
	}
}

function updatePoints(bonus, newPoints){
	var i = 0;
	while (i < bonus) {
		newPoints = newPoints + skill + binus;
		i = i + 1;
	}
	return newPoints + userPoints;
}
userPoints = updatePoints(2, 100);
avatar = getAvatar(2112);

Эти четыре переменные имеют глобальную область действия. Они будут видны во всем коде, приведенном внизу.

Если к вашей странице подключаются дополнительные сценарии, то эти глобальные переменные будут видны
им, а их глобальные переменные будут видны вам!

Переменная level является локальной; она видна только в коде, содержащемся в функции getAvatar. 
Так что к переменной level можно обращаться только внутри этой функции.

И не забывайте о параметре points, он тоже имеет локальную область видимости в функции getAvatar.

Обратите внимание:
getAvatar также использует глобальную переменную pointsPerLevel.

В updatePoints определяется локальная переменная i. Переменная i видна во всем коде updatePoints.

bonus and newPOints также локальны по отношению к updatePoints, тогда как переменная serPoints
является глобальной.

А здесь в коде могут использоваться только глобальные переменные. Все переменные, объявленные внутри 
функций, невидимы в глобальной области действия.