Привлекайте пользователя к взаимодействию со страницей.

Мы  говорили о том, как важно повысить уровень интерактивности страниц и что для этого необходимо
взаимодействие с пользователем. Это взаимодействие можно организовать несколькими способами: некоторые
из них уже встречались вам. Ниже приведена краткая сводка таких взаимодействий, а потом мы рассмотрим их
более подробно.

Создание сигнала

Браузер поддерживает простейший механизм оповещения пользователей при помощи функции alert. Вызовите
alert со строкой, содержащей сообщение, и браузер выведет ее в симпатичном диалоговом окне. Честно говоря,
мы злоупотребляли этой функцией, она очень проста и удобна; но ее следует применять только тогда, когда
вы действительно  хотите, чтобы пользователь отложил все дела и немедленно ознакомился с вашим сообщением.

Прямая запись в документ

Веб-страницу можно рассматривать как документ (именно так ее называет браузер). Функция document.write
позволяет вывести произвольную разметку HTML и контент в произвольной точке страницы. Так поступать не
рекомендуется,  хотя время от времени этот способ все же применяется. Мы воспользовались, потому что он
достаточно прост для изучения JavaScript.

Вывод на консоль

В каждой среде JavaScript существует консоль, на которую можно выводить сообщения из программного кода.
Чтобы вывести сообщение на консоль, вызовите функцию console.log и передайте ей строку (вскоре мы рассмотрим
работу с консолью более подробно). Функция console.log - отличный инструмент диагностики и отладки. Впрочем,
в нормальной программе вывод на консоль спрятан от пользователя, так что данный механизм вряд ли можно
назвать эффективным.

Консоль - удобный инструмент для поиска ошибок в коде! Если вы ошиблись при вводе (например, пропустили
кавычку), JavaScript обычно выводит на консоль описание ошибки, которое упростит ее поиск.

Непосредственная модификация документа

Основной способ взаимодействия со страницей и пользователями - средства JavaScript, позволяющее обращаться
к разметке веб-страницы, читать и изменять ее содержимое, даже изменять структуру и стиль! Все эти оперции 
выполняются через объектную модель документа (см.далее). Как вы вскоре убедитесь, это лучший вариант 
взаимодействия с пользователем. Однако для работы с объектной моделью документа необходимо знать структу страницы
и программный интерфейс, используемый при чтении и записи страницы. Вскоре мы доберемся до этой темы,
но сначала нужно освоить еще немного JavaScript.

Заветная цель, к которой мы стремимся. Достигнув ее, вы сможете читать страницу, изменять ее и выполнять
любые манипуляции с ее содержимым.