Чуть подробнее...

Пока высокоуровневому описанию и блок-схеме вполне профессионального вида  мы достаточно хорошо представляем,
как должна работать игра. Но прежде чем переходить к написанию кода, необходимо разобраться с некоторыми
подробностями.

Представление кораблей

Для начала нужно определиться с тем, как будут представляться корабли на игровом поле. Виртуальная сетка
игрового поля не зря называется "виртуальной". Иначе говоря, в программе она не существует. Если и игра, и 
пользователь знают, что корабль располагается в трех смежных клетках из семи (начиная с нуля), то заводить
представление для строки таблицы не обязательно. Возможно, вам хочется определить структуру данных,
в которой хранится содержимое всех семи ячеек, и попытаться разместить корабль в ней. Но в этом просто нет
необходимости. Достаточно знать, в каких ячейках находится корабль (предположим, в ячейках 1,2 и 3)

Получение данных от пользователя

Для получения данных от пользователя можно использовать функцию prompt. Когда пользователь должен ввести
новую позицию, программа вызывает функцию prompt, выводящую сообщение, и получает данные - число в
диапазоне от 0 до 6.

Вывод результатов.

Как организовать вывод? Пока мы продолжим использовать функцию alert. Решение топорное, но оно работает.
(В полноценной игре мы будем напрямую обновлять веб-страницу, но до этого еще нужно добраться.)

1. Игра запускается и создает один корабль, занимающий три клетки в одной строке из семи клеток.
Позиции клеток обозначаются целыми числами; например, на этом рисунке корабль занимат клет 1,2,3;

2. Начинаем! Запрашиваем координаты выстрела:
А
В Проверяем, попал ли пользователь в одну из трех клеток корабля. Количество попаданий хранится 
в переменной.

3. Игра заканчивается, когда пользователь попал по всем трем клеткам и количество попаданий
в переменной hits достигает трех. Программа сообщает, за сколько выстрелов был потоплен корабль.

Просто взаимодействие с игрой.