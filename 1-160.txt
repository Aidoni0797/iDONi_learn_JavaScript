Задаваемые вопросы

В: Команда for содержит объявление переменной и ее иннициализацию. Вы говорили, что объявления переменных
следует размещать в начале файла. Как это понимать?

О: Да, размещайте объявления в начале файла - для локальных переменных, в начале функции - для локальных
переменных. Но иногда разумнее объявить переменную непосредственно там, где она будет использоваться;
циклы for - один из таких случаев. Как правило, переменные циклов (например, i) используются только для 
управления циклами и после завершения уже не нужны. Вы, конечно, можете использовать i в своем коде, но
так поступать не рекомендуется. Таким образом объявление прямо в команде for делает программный код
лаконичнее и выразительнее.

В: Что означает myarray.push(value)?

О: Мы кое-что скрыли от вас: в JavaScript массив является особой разновидностью объектов. Как вы узнаете
в следующей главе, с объектом могут быть связаны функции. Так что считайте push функцией, которая работает
с myarray. В данном случае функция добавляет в массив новый элемент - значение, которое передается в
аргументе для сохранения в массиве.Запись
genres.push("Metal");
означает, что вы вызываете функцию push и передаете ей строковый аргумент "Metal". Функция push получает
аргумент и добавляет его как новое значение в конец массива genres.

В: Можно ли чуть подробнее о том, что такое "разреженный массив"?

О: Разреженный массив содержит значения по небольшому подмножеству индексов, и не содержит значений в других 
позициях. Создать разреженный массив несложно:
var sparseArray = [];
sparseArray[0]=true;
sparseArray[100]=true;
В этом примере sparseArray содержит всего два значения с индексами 0 и 100 (true в обоих элементах).
Значения по всем остальным индексам остаются неопределенными. Длина массива равна 101, но массив содержит
всего два значения.

В: Предположим, имеется массив длиной 10. Я добавлю элемент с индексом 10000. Что произойдет с индексами
с 10 по 9999?

О: Все эти элементы будут содержать underfined. сли вы еще не забыли, значение underfined присваивается
переменной, которая еще не была инициализирована. В общем, считайте, что вы создаетет 9989 переменных, но 
не инициализирована. В общем, считайте, что вы создаете 9989 переменных, но не инициализируете их. Помните,
что все  эти переменные занимают память на компьютере, даже если они не содержат полезных даных. Будьте
уверены в том, что у вас есть веские причины для создания разреженного массива.

В: Если я перебираю массив, и некоторые элементы содержат underfined, не нужно ли проверять значения перед
использованием?

О: Если вы думаете, что массив может быть разреженным или содержит хотя бы одно значение underifined,
то перед использованием элемента массива вам стоит убедиться в том, что его значение отлично от
underfined. Если вы ограничиваетесь выводом значений на консоль проблем не будет, но скорее всего, значения 
будут использоваться для более серьезных целей, например для каких-то вычислений. В таком случае попытка 
использовать underfined приведет к ошибке, или по крайней мере к неожиданному поведению программы.
Чтобы проверить значение на underfined, используйте запись:
if (myarray[i]==underfined){
...
}
Обратите внимание underfined не заключается в кавычки (потому что это не строка, а значение).

В: Все массивы,создававаемые нами ранее, были литералами. Существует ли другой способ создания массивов?

О: Да. Возможно, вы видели синтаксис:
var myarray = new Array[3];

Эта команда создает новый массив с тремя пустыми позициями (то есть массив длины 3, который не содержит
ни одного значения). Далее массив можно заполняться так, указывая значения myarray 0,1 and 2. Пока вы не 
добавите значения, элементы myarray будут underfined.
Массив, созданный таким образом, ничем не отличается от обычного, созданного на базе литерала. На практике
синтаксис с литералом применяется чаще, поэтому в оставшейся части книги мы чаще будем использовать
именно эту форму записи.
Не обращайте внимание на нюансы синтаксиса (что такое new, почему Array начинается с буквы в верхнем регистре
и т.д.). Мы доберемся до них позднее!