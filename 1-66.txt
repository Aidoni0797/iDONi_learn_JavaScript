Переходим к реализации логики

С переменными разобрались, теперь пора заняться псевдокодом, описывающим непосредственную реализацию игры.
Мы разобьем его на несколько частей. Начнем с цикла: он должен выполняться до тех пор, пока корабль не
будет потоплен. Дальше нужно получить координаты выстрелау пользователя и проверить их (убедиться в том,
что пользователь ввел число от 0 до 6). После этого нужно написать логику проверки попадания и убедиться
в том, что корабль еще не пошел на дно. В завершение работы будет выводиться небольшой отчет с количеством
попыток, которые понадобились игроку для того, чтобы потопить корабль.

ЦИКЛ: пока корабль не потоплен
ПОЛУЧИТЬ координаты выстрела у пользователя
СРАВНИТЬ введенные данные с диапазоном корректных значений
ЕСЛИ введенные данные некорректны,
ВЫВЕСТИ сообщение с предложением ввести правильное число
ИНАЧЕ
ПРИБАВИТЬ один к guesses
ЕСЛИ выстрел попал в корабль
ПРИБАВИТЬ один к количеству попаданий
ЕСЛИ поличество попаданий равно трем
ПРИСВОИТЬ isSUnk значение true
ВЫВЕСТИ сообщение "Корабль потоплен!"
КОНЕЦ ЕСЛИ
КОНЕЦ ЕСЛИ
КОНЕЦ ИНАЧЕ
КОНЕЦ ЦИКЛА
ВЫВЕСТИ статистику

ШАГ 1: Создание цикла, получение данных у пользователя и их проверка на корректность

ШАГ 2: Проверяем результат выстрела. Попал? Мимо?

ШАГ 3: Проверяем, не затонул ли корабль.

ШАГ 4: Вывод завершающего сообщения для пользователя.

Что делать:
- Создать цикл и получить данные у пользователя
- Проверить на попадание
- Проверить, не был ли корабль потоплен
- Вывести результат для пользователя