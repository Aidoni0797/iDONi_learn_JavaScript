Еще немного поговорим о передаче объектов функциям

Мы уже говорили о том, как аргументы передаются функциям - они передаются по значению, что подразумевает
копирование. Итак, если мы передаем целое число, соответствующая функция получает копию этого целого числа
и может ею распоряжаться. Аналогичные правила действуют и для объектов, однако необходимо подробнее разобраться,
что передача по значению означает для объектов, - это поможет понять, что происходит при передаче
объектов функциям.

Вы уже знаете, что при приваивании объекта переменной в переменной хранится ссылка на объект, а не сам объект.
Еще раз напомним, что ссылку можно рассматривать как указатель на объект.

Когда объект присваивается переменной, в переменную заносится ссылка на этот объект. Сам объект в переменной
не хранится.

name: "Fido"
weight: 40
breed: "Mixed"
loves: "walks"

Dog

Итак, при вызове функции и передаче ей объекта вы передаете не сам объект, а ссылку на него. Получается,
что при использовании семантики передачи по значению в параметре передается копия ссылки, которая также
указывает на исходный объект.

Переменная параметра dog указывает на тот же объект, что и fido.

Когда мы вызываем функцию bark и передаем fido как аргумент, в переменную параметра dog помещается копия ссылки.

function bark(dog){
	...код функции...
}
bark(fido);

Что же все это означает для нас? Одно из самых важных последствий заключается в том, что при изменении свойства 
объекта в функции изменяется свойство исходного объекта. Следовательно все изменения, вносимые в объект 
внутри функции, продолжат действовать и после завершения функции. Рассмотрим пример...