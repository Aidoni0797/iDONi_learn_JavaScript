Решение упражнения

Вот как выглядит наша реализация функции getMostCostEffectiveSolution, которая получает массив результатов,
массив затрат и максимальный результат, и определяет индекс образца с максимальным результатом при
минимальных затратах. Протестируйте код bubbles.html и убедитесь в том, что вы получили те же результаты.

Функция getMostCostEffectiveSolution получает массив результатов, массив затрат и максимальный результат.

Сначала cost присваивается большое число, которое уменьшается при нахожденииобразца с меньшими затратами
(и максимальным результатом).

РЕшение с минимальными затратами отслеживается в переменной cost...

а индекс образца с минимальными затратами - в переменной index.

Перебираем массив scores так же, как прежде

и проверяем, является ли результат максимальным

Если результат максимален, мы проверяем затраты. Если текущие затраты больше сохраненных, значит,
мы нашли образец с меньшими затратами; его позиция (индекс в массиве) сохраняется в переменной index, 
а затраты - в cost (хранящей минимальные затраты по всем просмотренным элементам).

После завершения цикла в переменной index хранится индекс образца с минимальными затратами.
Он возвращается коду, вызвавшему функцию.

Индекс (номер образца) выводится на консоль.

Из итогового отчета видно, что победителем стал образец 11 он обеспечивает максимальный результат с 
наименьшими затратами.

ДОПОЛНИТЕЛЬНО: Эту функцию можно реализовать с помощью массива bestSolutions, чтобы перебирать весь массив
результатов заново. Вспомните в массиве estSolutions уже хранятся индексы образцов с максимальным результатом
При сравнении затрат можно использовать элементы bestSolutions для индексирования массива costs. Такой
код чуть эффективнее, но чуть сложнее для чтения и понимания! Если вас интересует эта тема, реализацию
можно найти в архиве с кодами на сайте wickedlysmart.com.

var scores = [60,50,60,58,54,54,58,50,52,54,48,69,34,55,51,52,44,51,69,64,66,55,52,61,46,31,57,52,44,18,
41,53,55,61,51,44];
var highScore = 0;

function getMostCostEffectiveSolution(scores, costs, highscore){
	var cost = 100;
	var index;
	for (var i=0; i<scores.length;i++){
		if (scores[i] == highscore){
			index = i;
			cost = costs[i];
		}
	}
return index;
}
var mostCostEffective = getMostCostEffectiveSolution(scores, costs, highScore);
console.lg("Bubble Solution #"+mostCostEffective+" is the most cost effective");
#iDONi код не работает почему не рабоает