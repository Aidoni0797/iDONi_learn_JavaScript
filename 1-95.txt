Ах, если бы только код можно было повторно использовать везде, где потребуется...
Я бы просто вызывала его вместо того, чтобы набирать заново. И чтобы ему можно было присвоить понятное имя,
которое легко запоминается. И чтобы изменения вносились только в одном месте, а не во многих...
Как жаль, что это только мечты...

Кстати, а вы когда-нибудь слышали о ФУНКЦИЯХ?

Знакомьтесь: функции. Функции JavaScript позволяют взять фрагмент кода, присвоить ему имя, а затем ссылаться
на его имя везде, где он понадобится. Судя по описанию - это то, что нам нужно.

Допустим, вы пишите программу про собак, в которой выводятся сообщения с лаем. Если программа имеет дело
с большой собакой, то и лай будет громким и солидным: "WOOF WOOF". А если собака маленькая, хватит
и тоненького "woof woof". И эта функциональность будет неоднократно использоваться в коде. Давайте напишем
функцию bark, чтобы вызвать ее в нужной ситуации:

function bark(name, weight) {

}

Определение функции начинается с ключевого слова function

Далее следует имя функции, например bark

А теперь указываются два значения, которые должны передаваться для использования функции: имя собаки и ее вес.

Это параметры функции. Параметры перечисляются в круглых скобках после имени функции.

Мы будем называть его телом функции. Тело состоит из всего кода, заключенного между {и}.

Далее записывается код, который должен выполняться при использовании функции.

ТЕперь нужно написать код функции. Она должна проверять значение weight и выводить соответствующее сообщение.

function bark(name, weight){
	if (weight>20){
		console.log(name + " says WOOF WOOF");
	} else {
		console.log(name + " says woof woof");
	}
}

Сначала проверяем значение weight...

Обратите внимание: имена переменных, используемые в коде, совпадают с именами параметров функции.

а затем выводим имя собаки с одним из двух сообщений: WOOF WOOF или woof woof

Итак, у нас имеется функция, которую мы можем использовать в своем коде. Посмотрим, как это делается